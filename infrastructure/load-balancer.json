{
	"AWSTemplateFormatVersion" : "2010-09-09",

	"Description" : "HTTP internet facing v2 load balancer",

	"Parameters" :
	{

		"Name": {
			"Description" : "Name of the LB",
			"Type": "String",
			"ConstraintDescription" : "can contain only ASCII characters"
		},

		"VPCId": {
			"Description" : "ID of the container VPC",
			"Type": "AWS::EC2::VPC::Id",
			"ConstraintDescription" : "must be a valid VPC ID"
		},

		"SubnetIDs": {
			"Description": "Comma-delimited list of VPC subnet IDs",
			"Type": "List<AWS::EC2::Subnet::Id>"
		},

		"DestSecurityGroupId": {
			"Description" : "ID of the destination (instance) security group",
			"Type": "AWS::EC2::SecurityGroup::Id",
			"ConstraintDescription" : "must be a valid security group ID"
		},
	
		"DefaultTargetGroupId": {
			"Type": "String",
			"Description": "must be a valid target group ID"
		}
	},


	"Resources" :
	{

		"LoadBalancer" : {
			"Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
			"Properties" : {
				"LoadBalancerAttributes" : [ 
					{
						"Key": "deletion_protection.enabled",
						"Value": false
					},
					{
						"Key": "idle_timeout.timeout_seconds",
						"Value": 60
					}
				],
				"Name": { "Ref" : "Name" },
				"Scheme" : "internet-facing",
				"SecurityGroups" : [ { "Ref": "LBSecurityGroup" } ],
				"Subnets" : { "Ref": "SubnetIDs" },
				"Tags" : [ 
					{ "Key": "Name", "Value" : { "Ref" : "Name" } }
				]
			},
			"DependsOn" : "LBSecurityGroup"
		},

		"HTTPListener": {
			"Type" : "AWS::ElasticLoadBalancingV2::Listener",
			"Properties" : {
				"DefaultActions" : [
					{
						"TargetGroupArn": { "Ref" : "DefaultTargetGroupId" },
						"Type": "forward"
					}
				],
				"LoadBalancerArn" : { "Ref": "LoadBalancer" },
				"Port" : 80,
				"Protocol" : "HTTP"
			},
			"DependsOn": [ "LoadBalancer" ]
		},

		"LBSecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"GroupDescription" : "Enable inbound and outbound HTTP",
				"VpcId": { "Ref" : "VPCId" },
				"Tags" : [ 
					{ "Key": "Name", "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "Name" }, "lb" ] ]} }
				]
			}
		},

		"LBSecurityGroupHTTPIngress": {
			"Type": "AWS::EC2::SecurityGroupIngress",
			"Properties" : {
				"IpProtocol" : "tcp",
				"CidrIp" : "0.0.0.0/0",
				"FromPort" : 80,
				"ToPort" : 80,
				"GroupId" : { "Fn::GetAtt": [ "LBSecurityGroup", "GroupId" ] }
			},
			"DependsOn": [ "LBSecurityGroup" ]
		},

		"LBSecurityGroupEgress": {
			"Type": "AWS::EC2::SecurityGroupEgress",
			"Properties":{
				"IpProtocol": "tcp",
				"FromPort": 32768,
				"ToPort": 61000,
				"DestinationSecurityGroupId": { "Ref": "DestSecurityGroupId" },
				"GroupId": { "Fn::GetAtt": [ "LBSecurityGroup", "GroupId" ] }
			},
			"DependsOn": [ "LBSecurityGroup" ]
		},

		"DestSecurityGroupIngress": {
			"Type": "AWS::EC2::SecurityGroupIngress",
			"Properties": {
				"IpProtocol" : "tcp",
				"FromPort" : 32768,
				"ToPort" : 61000,
				"SourceSecurityGroupId": { "Fn::GetAtt": [ "LBSecurityGroup", "GroupId" ]},
				"GroupId": { "Ref": "DestSecurityGroupId" }
			},
			"DependsOn": [ "LBSecurityGroup" ]
		}

	},

	"Outputs" :
	{
		"URL": {
			"Description": "Load balancer internet-facing URL",
			"Value": { "Fn::Join": [ "", [ "https://", { "Fn::GetAtt": [ "LoadBalancer", "DNSName" ]}]]}
		},

		"DNSName": {
			"Description": "Load balancer DNS name",
			"Value": { "Fn::GetAtt": [ "LoadBalancer", "DNSName" ]}
		},

		"LoadBalancerArn": {
			"Description": "Load balancer ARN",
			"Value": { "Ref": "LoadBalancer" }
		},

		"HTTPListenerArn": {
			"Description": "Load balancer HTTP listener ARN",
			"Value": { "Ref": "HTTPListener" }
		}
	}
}